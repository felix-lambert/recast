- Add languages (Failed)
- Build your own notification bot in Elixir (Success)
    https://blog.recast.ai/build-notifier-bot-elixir/
- Build your own notification bot in Elixir (Continue) (Success)
    https://elixir-lang.org/
- Get started with Elixir (Success)
- How to use Random Access Navigation (RAN) to create smarter bots (Success)
    https://blog.recast.ai/random-access-navigation-ran-tutorial/
1 POMODORO
- How to use Random Access Navigation (RAN) to create smarter bots (Continue) (Success)
- How to use Random Access Navigation (RAN) to create smarter bots (Continue) (Success)
- How to use Random Access Navigation (RAN) to create smarter bots (Continue) (Success)
- How to use Random Access Navigation (RAN) to create smarter bots (Continue) (Success)
    https://github.com/plieb/moviedbot
2 POMODORO
- Use a multilingual bot (Success)
    https://blog.recast.ai/build-multilingual-bot-hour/ 
- Use a multilingual bot (Continue) (Success)
- Use a multilingual bot (Continue) (Success)
- Redo starter kit (Contenur) (Success)
3 POMODORO

- Redo starter kit (Continue) (Success)
- Redo starter kit (Continue) (Success)
- Redo starter kit (Continue) (Success)
- Ajout de tests unitaires (Success)
1 POMODORO

- Ajout de tests unitaires (Success)
- Ajout de tests unitaires (Success)
- Ajout de tests unitaires (Success)
- Ajout de tests unitaires (Success)

2 POMODORO

- Ajout de tests unitaires (Success)
- Ajout de tests unitaires (Success)
- Ajout de tests unitaires (Success)
- Enlever recastai module (Success)

3 POMODORO

- Enlever recastai module (Success)
- Enlever recastai module (Success)
- Enlever recastai module (Success)
- Enlever recastai module (Success)

4 POMODORO

- Avancer tests unitaires (Success)
- Avancer tests unitaires (Success)
- Avancer gestions d'erreurs (Success)
- Ajouter code coverage (Success)

1 POMODORO

- S'organiser pour Station F (Success)
- Handling errors (Success)
- Divide NodeJS into units (Success)
- Checkout the message payload page (Success)
    https://github.com/RecastAI/SDK-NodeJS/wiki/Message-payload

2 POMODORO

- Put NodeJS robot linter on Visual Studio (Success)
- Organiser le save et save-dev (npm) (Success)
- Divide NodeJS into units (Success)
- Do error handling (SUCCESS)

3 POMODORO

- Avoid duplication (Success)
- Test function req, res... express (Success)
- Essayer le connector de skype (Success)
- Funfunfunction error handling (Success)

4 POMODORO

- Test function req, res... express (Success)
- See last lessons on funfunfunction (Success)
- Try to replace request to fetch (Success)
- Try to replace request to fetch (Success)

1 POMODORO

- Watch funfunfunction graphql video (Success)
- Watch mocha and chai doc (Success)
- Do coverage for all (Success)
- Avoid duplications (Success)

2 POMODORO

- Avoid duplications (Success)
- Advance mocha + chai doc (Success)
- Do coverage for all (Success)
- Start TDD (Success)

3 POMODORO

- Train bot on Recast.AI (Success)
- Avoid duplications (Success)
- Do one recast tuto (Success)
- Advance mocha + chai doc (Success)

4 POMODORO

- Do one recast tuto (Success)
- Train bot on Recast.AI (Success)
- Advance chai bot (Success)
- Continue TDD (Success)

1 POMODORO

- Do one recast tuto (Success)
- Train bot on Recast.AI (Success)
- Try language change functionnality (Success)
- Avoid duplications (Success)

2 POMODORO

- Put nodemon (Success)
- Try language change functionnality (Success)
- Avoid duplications (Success)
- Install MongoDB

3 POMODORO

- Try language change functionnality
- Continue TDD

Important code + commands
# netstat -ntlp | grep LISTEN
# mix run â€”no-halt (run vigile)
# UPDATE VSCODE
# wget https://vscode-update.azurewebsites.net/latest/linux-deb-x64/stable -O /tmp/code_latest_amd64.deb
# sudo dpkg -i /tmp/code_latest_amd64.deb
# UPDATE VSCODE